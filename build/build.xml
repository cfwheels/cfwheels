<?xml version="1.0"?>
<!-- ======================================================================
     CFWheels Core Build
     ====================================================================== -->
<project name="cfwheels-core-build" default="build.all" basedir="../">
	<description>
		Build a new distribution of CFWheels
	</description>

	<!-- UPDATE ON EACH VERSION CYCLE -->
	<property name="groupID"				value="bpamiri" />
	<property name="cfwheels.slug"	 		value="cfwheels-core-ci"/>
	<property name="cfwheels.core.slug"	 		value="cfwheels-core-ci"/>
	<property name="cfwheels.base.slug"	 		value="cfwheels-base-ci"/>

  <!-- Default environment check, if not passed via -Denvironment -->
	<condition property="environment" value="local">
		<not><isset property="environment" /></not>
	</condition>

	<!-- Build Labels -->
	<tstamp prefix="start"/>

	<!-- Load Contrib Tasks -->
	<path id="cp">
		<fileset dir="build/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!-- Define Tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="cp" />

	<!-- Init -->
	<target name="init" description="Init the build" unless="src.isInit">
		<if>
			<available file="build/build-${environment}.properties" />
			<then>
				<!-- Load env properties -->
				<echo>Loading properties from environment: ${environment}</echo>
				<loadproperties srcFile="build/build-${environment}.properties"/>
			</then>
		</if>
		<!-- Load root properties -->
		<echo>Loading base properties</echo>
		<loadproperties srcFile="build/build.properties"/>

		<!-- Build Conditions -->
		<condition property="build.branch" else="develop">
			<isset property="build.branch"/>
		</condition>
		<condition property="isPreRelease" else="false">
			<isset property="isPreRelease"/>
		</condition>

		<!-- Build Number -->
		<if>
			<not><isset property="build/build.number" /></not>
			<then>
				<propertyfile file="build/build.number" comment="Build Number for ANT. Edit not!">
					<entry key="build.number"
							type="int"
					     	operation="+"
							pattern="00000"
					     	default="1" />
				</propertyfile>

				<property file="build/build.number"/>
			</then>
		</if>

		<!-- Cleanup + Init -->
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build}" />
		<delete dir="${dir.exports}" />
		<mkdir dir="${dir.exports}" />

		<!-- Copy over original box.json as the getDependencies might update it -->
		<copy file="box.json" toFile="box-original.json" encoding="UTF-8" overwrite="true"/>

		<!-- Mark as init -->
		<property name="src.isInit" value="true" />
	</target>

	<!-- Build All Releases -->
	<target
		name="build.all"
		description="Builds CFWheels"
		depends="build.cfwheels">
	</target>

	<!-- Build CFWheels Distribution -->
	<target name="build.cfwheels" description="Build a new CFWheels Core distribution" depends="init">
		<!-- Init Platform Dirs -->
		<property name="dir.cfwheels.exports"	value="${dir.exports}/cfwheels/${cfwheels.version}" />
		<property name="be.cfwheels.exports" 	value="${be.exports}/${cfwheels.slug}" />
		<property name="dir.cfwheels.core.exports"	value="${dir.exports}/${cfwheels.core.slug}/${cfwheels.version}" />
		<property name="be.cfwheels.core.exports" 	value="${be.exports}/${cfwheels.core.slug}" />
		<property name="dir.cfwheels.base.exports"	value="${dir.exports}/${cfwheels.base.slug}/${cfwheels.version}" />
		<property name="be.cfwheels.base.exports" 	value="${be.exports}/${cfwheels.base.slug}" />

		<!-- Cleanup Old Code -->
		<delete verbose="true" failonerror="false">
			<fileset dir="${dir.cfwheels.exports}" />
			<fileset dir="${dir.exports}/${cfwheels.slug}">
				<include name="cfwheels-be*" />
			</fileset>
			<fileset dir="${dir.exports}/${cfwheels.core.slug}">
				<include name="cfwheels-be*" />
			</fileset>
			<fileset dir="${dir.exports}/${cfwheels.base.slug}">
				<include name="cfwheels-be*" />
			</fileset>
		</delete>

		<!-- Build Label -->
		<property name="build.label" value="${cfwheels.slug}-${cfwheels.version}+${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<property name="build.core.label" value="${cfwheels.core.slug}-${cfwheels.version}+${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<property name="build.base.label" value="${cfwheels.base.slug}-${cfwheels.version}+${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<concat destfile="${dir.build}/cfwheels/${build.label}">Built on ${start.TODAY}</concat>
		<concat destfile="${dir.build}/cfwheels/${build.core.label}">Built on ${start.TODAY}</concat>
		<concat destfile="${dir.build}/cfwheels/${build.base.label}">Built on ${start.TODAY}</concat>

		<!-- Copy Src -->
      	<copy todir="${dir.build}/cfwheels/wheels" encoding="UTF-8" overwrite="true">
        	<fileset dir="wheels">
        	</fileset>
        </copy>

		<!--Copy text files to install folder-->
		<copy todir="${dir.build}/cfwheels/" encoding="UTF-8" overwrite="true">
			<fileset file="license.txt" />
			<fileset file="readme.md" />
		</copy>

		<!-- Copy box.json to build -->
		<copy file="box-original.json" toFile="${dir.build}/cfwheels/box.json" encoding="UTF-8" overwrite="true"/>

		<!-- Replace Version + Build Numbers -->
		<replaceregexp match='@build.version@' replace="${cfwheels.version}" flags="ig" byline="true" encoding="UTF-8">
		  <fileset dir="${dir.build}/cfwheels" />
		</replaceregexp>

		<!-- Determine snapshot vs isPrerelease vs master artifact -->
		<if>

			<equals arg1="${isPreRelease}" arg2="true" />
			<then>
				<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true" encoding="UTF-8">
					<fileset dir="${dir.build}/cfwheels" />
				</replaceregexp>
			</then>

			<elseif>
				<equals arg1="${build.branch}" arg2="develop" />
				<then>
					<replaceregexp match='\+@build.number@' replace="-snapshot" flags="ig" byline="true" encoding="UTF-8">
					  <fileset dir="${dir.build}/cfwheels" />
					</replaceregexp>
				</then>
			</elseif>

			<else>
				<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true" encoding="UTF-8">
				  <fileset dir="${dir.build}/cfwheels" />
				</replaceregexp>
			</else>
		</if>

		<!-- Zip CFWheels Bundle -->
		<zip destfile="${dir.cfwheels.exports}/${cfwheels.slug}-${cfwheels.version}.zip" basedir="${dir.build}/cfwheels" />
		<zip destfile="${dir.cfwheels.exports}/${cfwheels.core.slug}-${cfwheels.version}.zip" basedir="${dir.build}/cfwheels" />
		<zip destfile="${dir.cfwheels.exports}/${cfwheels.base.slug}-${cfwheels.version}.zip" basedir="${dir.build}/cfwheels" />

		<!-- Copy box.json to exports -->
		<copy file="${dir.build}/cfwheels/box.json" 	toFile="${dir.cfwheels.exports}/box.json" 	encoding="UTF-8" />
	<!--	<copy file="${dir.build}/cfwheels/README.md" toFile="${dir.cfwheels.exports}/README.md" 	encoding="UTF-8" /> -->

		<!-- Build Checksum -->
		<checksum forceoverwrite="true" fileext=".md5">
			<fileset dir="${dir.cfwheels.exports}">
				<include name="*.zip" />
			</fileset>
		</checksum>
		<checksum forceoverwrite="true" algorithm="SHA-512" fileext=".sha512">
			<fileset dir="${dir.cfwheels.exports}">
				<include name="*.zip" />
			</fileset>
		</checksum>

		<!-- Move Bleeding Edge to Root -->
		<copy file="${dir.cfwheels.exports}/${cfwheels.slug}-${cfwheels.version}.zip"
			  tofile="${be.cfwheels.exports}/${cfwheels.slug}-be.zip"
			  overwrite="true"
			  encoding="UTF-8"/>
		<copy file="${dir.cfwheels.exports}/${cfwheels.core.slug}-${cfwheels.version}.zip"
			  tofile="${be.cfwheels.exports}/${cfwheels.core.slug}-be.zip"
			  overwrite="true"
			  encoding="UTF-8"/>
		<copy file="${dir.cfwheels.exports}/${cfwheels.base.slug}-${cfwheels.version}.zip"
			  tofile="${be.cfwheels.exports}/${cfwheels.base.slug}-be.zip"
			  overwrite="true"
			  encoding="UTF-8"/>
    </target>

</project>
