# This is a reusable workflow for executing the full CFWheels Test Suites
name: CFWheels Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  tests:
    name: Test Suites
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cf: [lucee5, adobe2016, adobe2018]
        db: [mysql, postgres, sqlserver, h2]
        exclude:
#          - cf: lucee5
#            db: mysql56
#          - cf: lucee5
#            db: postgres
#          - cf: lucee5
#            db: sqlserver
#          - cf: lucee5
#            db: h2
#          - cf: adobe2016
#            db: mysql56
#          - cf: adobe2016
#            db: postgres
#          - cf: adobe2016
#            db: sqlserver
          - cf: adobe2016
            db: h2
#          - cf: adobe2018
#            db: mysql56
#          - cf: adobe2018
#            db: postgres
#          - cf: adobe2018
#            db: sqlserver
          - cf: adobe2018
            db: h2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Docker Compose ${{ matrix.cf }} ${{ matrix.db }}
        if: ${{ matrix.db != 'h2' }}
        run: docker compose up ${{ matrix.cf }} ${{ matrix.db }} --detach --wait

      - name: Docker Compose ${{ matrix.cf }}
        if: ${{ matrix.db == 'h2' }}
        run: docker compose up ${{ matrix.cf }} --detach --wait

      - name: Wait for ${{ matrix.cf }} startup
        run: src/github/tests/server-up.sh ${{ matrix.cf }}

      - name: Sleep for 30 seconds
        # this was the only way we knew how to ensure that sqlserver is up
        if: ${{ matrix.db == 'sqlserver' }}
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'

      - name: Run core tests ${{ matrix.cf }} ${{ matrix.db }}
        run: src/github/tests/core-tests.sh ${{ matrix.cf }} ${{ matrix.db }}

      - name: Slack Notification
        # Only on failures and NOT in pull requests
        if: ${{ failure() && !startsWith( 'pull_request', github.event_name ) }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: builds
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'CFWheels tests failed :cry:, check them out here: https://github.com/cfwheels/cfwheels/actions'
          SLACK_TITLE: 'CFWheels Tests For (${{ matrix.cf }}, ${{ matrix.db }}) failed'
          SLACK_USERNAME: Peter Amiri
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
